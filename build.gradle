plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.4'
	id 'io.spring.dependency-management' version '1.1.4'
	id 'pl.allegro.tech.build.axion-release' version '1.14.3'
	id 'application'
	id 'org.javamodularity.moduleplugin' version '1.8.12'
	id 'org.openjfx.javafxplugin' version '0.0.13'
	id 'org.beryx.jlink' version '2.25.0'
	id 'com.palantir.docker' version '0.36.0'
	//id 'com.palantir.docker-run' version '0.36.0'
}

group = 'com.mgl870'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

repositories {
	mavenCentral()
	jcenter()
}

ext {
	junitVersion = '5.10.0'
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'

	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-devtools'
	implementation group: 'com.h2database', name: 'h2', version: '2.1.214'

	compileOnly 'org.projectlombok:lombok:1.18.24'

	annotationProcessor 'org.projectlombok:lombok:1.18.24'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

tasks.withType(JavaCompile) {
	options.encoding = 'UTF-8'
}

test {
	useJUnitPlatform()
}

javafx {
	version = '17.0.8'
	modules = ['javafx.controls', 'javafx.fxml']
}

jlink {
	imageZip = project.file("${buildDir}/distributions/app-${javafx.platform.classifier}.zip")
	options = ['--strip-debug', '--compress', '2', '--no-header-files', '--no-man-pages']
	launcher {
		name = 'app'
	}
}

jlinkZip {
	group = 'distribution'
}
